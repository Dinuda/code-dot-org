$root: '/blockly/media/turtle/'; //TODO: Parameterize for asset pipeline

@import 'color.scss';
@import 'font';

$alabaster: #fafafa;
$own-node-background-color: $white;
$user-row-hover-color: $lightest_teal;
$router-row-hover-color: $lighter_orange;
$to-address-color: $lightest_cyan;
$from-address-color: $lightest_yellow;
$packet-info-color: $lighter_green;
$message-color: $white;

// For aligning table columns across panels
$narrow-column-width: 50px;
$wide-column-width: 121px;

// Cross-browser helper for user_select property
@mixin user-select($val) {
  -moz-user-select: $val;
  -webkit-user-select: $val;
  -ms-user-select: $val;
  -khtml-user-select: $val;
  user-select: $val;
}

@mixin transition($val...) {
  -moz-transition: $val;
  -o-transition: $val;
  -webkit-transition: $val;
  transition: $val;
}

// Hide the footer instructions, we put them in the instructions tab
.hidden {
  display: none;
}

#netsim #prompt-table td {
  border: none;
}

.clearfix {
  clear: both;
}

// NetSim-specific styles
#netsim {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  // Alerts

  $netsim-alert-container-width: 450px;
  .netsimAlertContainer {
    position: absolute;
    top: -15px;
    left: 50%;
    width: $netsim-alert-container-width;
    margin-left: -($netsim-alert-container-width*0.5);
    z-index: 99999;
  }

  .alert {

    border-radius: 5px;
    transition-duration: 1s;

    &.netsimAlert {
      margin-bottom: 5px;
    }

    &.alertInfo {
      color: $dark_charcoal;
      background-color: $lightest-cyan;
      border-color: $light-cyan;
    }

    &.alertWarn {
      color: $dark_charcoal;
      background-color: $lightest-orange;
      border-color: $light-orange;
    }

    &.alertSuccess {
      color: $dark_charcoal;
      background-color: $lightest-green;
      border-color: $light-green;
    }

    &.alertError {
      color: $dark_charcoal;
      background-color: lighten($red, 50%);
      border-color: lighten($red, 20%);
    }

  }

  .netsimAlertButton {
    margin: 0;
  }

  .oldRouterLogModal {
    display: none;
    width: 90%;
    margin-left: -45%;

    select {
      margin: 5px 5px 0 5px;
      padding: 0;
      height: 22px;
      line-height: 20px;
      font-size: smaller;
      vertical-align: middle;
    }

    .modalBody {
      max-height: 450px;
      overflow-y: auto;
    }

    th {
      cursor: pointer;
    }

    td {
      font-family: monospace;
      white-space: pre-wrap;
      // Make sure table text can be selected and copied
      @include user-select(text);
    }

    .logBrowserLimitMessage {
      padding: 0.5em;
      text-align: center;
      font-style: italic;
      color: $charcoal;
    }
  }

  #netsim-disconnected {
    display: block;
    position: relative;
    max-width: 1000px;
    height: 100%;
    margin: auto;
    overflow-y: auto;

    #netsim-scrolling-lobby {
      overflow-y: auto;
    }
  }

  #netsim-leftcol {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 320px;
    overflow-x: hidden;
    overflow-y: auto;

    & > .columnWidthLimiter {
      width: 300px;
    }
  }

  #netsim-rightcol {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 330px;
    right: 0;
    overflow-y: hidden;
  }

  #netsim-send {
    position: absolute;
    bottom: 0;
    // "top" determined dynamically from content
    left: 0;
    right: 0;
  }

  #netsim-logs {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    // "height" set in Javascript
    overflow-y: hidden;
  }

  h1 {
    font-family: $gotham-bold;
  }

  p, label {
    font-family: $gotham-regular;
  }

  table {
    width: 100%;

    th, td {
      padding: 1px 5px;
      border-collapse: collapse;
    }

    th {
      border: solid $charcoal 1px;
      font-family: $gotham-regular;
      font-size: 10pt;
    }

    td {
      border: solid $lighter_gray 1px;
      font-family: $gotham-regular;

      // Make sure table text can be selected and copied
      @include user-select(text);
    }

    tbody {
      th, td {
        vertical-align: top;
      }
    }
  }

  // Span around clickable icons and text that show/hide panels.
  .minimizer {
    cursor: pointer;
    @include user-select(none);
  }

  .singleLineWithEllipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    padding-right: 1em;
  }

  .userData {
    font-family: monospace;

    // Make sure user data can always be selected and copied
    @include user-select(text);
  }

  // Orange SPAN button
  .netsimButton {
    display: inline-block;
    color: $white;
    background-color: $orange;
    border-radius: 3px;
    font-family: $gotham-regular;
    font-size: 8pt;
    line-height: 14pt;
    padding: 0 10px;
    cursor: pointer;

    // Button text should not be selectable
    @include user-select(none);

    &.largeButton {
      font-size: 14px;
      line-height: 20px;
      border-radius: 5px;
      padding: 7px 14px;
    }

    &.netsimButtonSecondary {
      background-color: $light_cyan;
    }

    &[disabled] {
      background-color: $lighter_gray;
      cursor: default;
    }
  }

  // Visualization styles
  #netsim-visualization {
    svg {
      background-color: $white;
      border: solid darkgray thin;

      .vizNode {
        text {
          fill: $black;
          text-anchor: middle;

          &.addressBox {
            font-weight: bold;
          }
        }

        circle {
          stroke: $light_cyan;
          stroke-width: 2;
          fill: $light_cyan;
        }

        rect {
          stroke: $light_cyan;
          stroke-width: 2px;
          fill: $white;
        }
      }

      .localNode {
        circle {
          stroke: $light_teal;
          fill: $light_teal;
        }

        rect {
          stroke: $light_teal;
        }
      }
      .routerNode {
        circle {
          stroke: $light_purple;
          fill: $light_purple;
        }

        rect {
          stroke: $light_purple;
        }
      }
      .autoDnsNode {
        circle {
          stroke: $light_yellow;
          fill: $light_yellow;
        }

        rect {
          stroke: $light_yellow;
        }
      }

      .vizWire {
        stroke: $charcoal;
        stroke-width: 2;
        @include transition(
                stroke 1s,
                stroke-width 1s); // Fade back to normal stroke color

        &.hiddenWire {
          display: none;
        }

        text {
          stroke: none;
          fill: transparent;
          font-family: monospace;
          font-size: 26pt;
          text-anchor: middle;
          @include transition(fill 1s);

          &.questionMark {
            @include transition(fill 1.2s);
          }
        }

        &.stateUnknown {
          stroke: $lighter_gray;

          .stateLabel {
            fill: transparent;
          }

          .questionMark {
            fill: $lighter-gray;
          }
        }

        &.stateOn, &.stateOff {
          stroke-width: 4;
          @include transition(none); // Snap to this state

          .stateLabel {
            @include transition(none);
          }

          .questionMark {
            fill: transparent;
            @include transition(none); // Snap to this state
          }
        }

        &.stateOff {
          stroke: $black;

          .stateLabel {
            fill: $black;
          }
        }

        &.stateOn {
          stroke: $orange;

          .stateLabel {
            fill: $orange;
          }
        }
      }
    }
  }

  .netsimShardSelectionPanel {
    overflow: hidden;

    .fieldBox {
      float: left;
      margin-right: 1em;
    }

    .clearfix {
      clear:both;
    }
  }

  .netsimLobbyPanel {
    .instructions {
      float: left;
      width: 30%;
    }

    .controls {
      margin-left: calc(30% + 1em);
    }

    table {
      margin-bottom: 1em;

      &.nomargin {
        margin-bottom: 0;
      }

      img {
        height: 14px;
        vertical-align: text-top;
      }
    }

    td {
      height: 40px;
      vertical-align: middle;
    }

    .emptyRow {
      text-align: center;
      border: none;
    }

    .buttonColumn {
      width: 1px;
      text-align: center;
    }
  }

  .netsimPanel.netsimLobby div.panelBody {
    padding: 1em;
  }

  .netsimLobbyList {
    background-color: $white;
    padding: 0.5em;
    border: inset darkslategray thin;
    list-style: none;

    li {
      background-color: $white;
      border-left: solid white 3px;
      border-right: solid white 3px;
      padding: 0.3em 0.8em;
    }

    .emptyRow {
      text-align: center;
      color: $lightest_gray;
      font-style: italic;
    }

    .ownRow {
      background-color: $own-node-background-color;
      font-style: italic;
    }

    .userRow {
      &.selectableRow:hover {
        background-color: $user-row-hover-color;
        color: $black;
      }
    }

    .routerRow {
      &.selectableRow:hover {
        background-color: $router-row-hover-color;
        color: $black;
      }
    }
  }

  .netsimLobbyButtons {
    text-align: center;
    padding-top: 4px;
  }

  // NetSim Panel
  // One of the sections in the left column with a colored header
  // and user controls.

  // How rounded are the corners of the panel?
  $panel-border-radius: 0.3em;

  div.netsimPanel {
    margin: 0 0 0.5em;
    padding: 0;

    h1 {
      margin: 0;
      padding: 0.3em;
      font-family: $gotham-regular;
      font-size: 110%;
      font-weight: bold;
      line-height: 110%;
      background-color: $cyan;
      color: $white;
      border-radius: $panel-border-radius $panel-border-radius 0 0;

      .panelControls {
        float: right;
        margin-top: -0.3em;
        padding-top: 2px;

        // Special margin for buttons in this control area, so they don't squish together.
        .netsimButton {
          margin-left: 3px;
        }
      }

      .padLeft {
        padding-left: 0.2em;
      }
    }

    div.panelBody {
      background-color: $white;
      border-left: solid darkgray 1px;
      border-right: solid darkgray 1px;
      border-bottom: solid darkgray 1px;
      border-top: solid $cyan 1px;
      border-radius: 0 0 $panel-border-radius $panel-border-radius;
    }

    .contentWrap {
      margin: 1em;
    }

    // Minimized panel, contents are hidden.
    &.minimized {
      h1 {
        border-radius: $panel-border-radius;
        .clearButton {
          display: none;
        }
      }

      div.panelBody {
        display: none;
      }
    }

    .panelFooter {
      margin: 10px;
      overflow: hidden;

      .rightSideControls {
        float: right;
        text-align: right;
      }
    }
  }

  // Log panel rules
  // Panel that shows a history of sent or received messages in a table.
  .netsimLogPanel {

    .packet {
      margin: 10px;
      padding: 5px;
      border: solid darkgray thin;
      border-radius: 3px;
      background-color: $lightest_gray;

      &.unread {
        background-color: $alabaster;
        border-color: $black;

        th {
          font-weight: bold;
        }
      }

      .expander {
        cursor: pointer;
      }

      // The top-left cell that contains the expander icon
      .maximizedPacket thead th.encodingLabel {
        text-align: left;
      }

      // Nudge the minimized expander to line up with the maximized one
      .minimizedPacket .expander {
        padding: 0 5px;
      }
    }

    .scrollArea {
      margin: 0.5em 0;
      width: 100%;
      overflow-y: auto;
    }

    table {
      th {
        border: none;
        background-color: transparent;
        color: $black;
      }

      tbody {
        td {
          font-family: monospace;

          // Make sure table text can be selected and copied
          @include user-select(text);
        }

        tr.ascii td.message {
          white-space: pre-wrap;
        }
      }
    }

    th.encodingLabel, td.encodingLabel,
    th.toAddress, td.toAddress,
    th.fromAddress, td.fromAddress,
    th.packetInfo, td.packetInfo {
      text-align: center;
    }

    th.encodingLabel, td.encodingLabel {
      width: 1%; // Depend on nowrap
    }

    th.toAddress, td.toAddress,
    th.fromAddress, td.fromAddress {
      width: $narrow-column-width;
    }

    th.packetInfo, td.packetInfo {
      width: $wide-column-width;
    }

    td.toAddress {
      background-color: $to-address-color;
    }

    td.fromAddress {
      background-color: $from-address-color;
    }

    td.packetInfo {
      background-color: $packet-info-color;
    }

    td.message {
      background-color: $message-color;
    }
  }

  // Send panel rules
  // Panel that lets the user enter and send messages
  // Mimics the log panel styles as much as possible.
  .netsimSendPanel {

    .sendPanelPackets {
      max-height: 265px;
      overflow-y: auto;
    }

    .netsimPacket {
      border: solid darkgray thin;
      background-color: $lightest_gray;
      margin: 10px;
      padding: 0.5em;
      border-radius: 0.5em;

      .packetControls {
        float: right;
        text-align: right;
      }

      th {
        border: none;
        background-color: transparent;
        color: $black;
      }

      // All input fields
      input, textarea {
        resize: none;
        padding: 0.2em;
        margin-bottom: 0.2em;
        font-family: monospace;
        background-color: transparent;
        box-shadow: none;
      }
      input {
        border: solid 1px #ccc;
      }
      textarea {
        border: none;
      }

      .watermark {
        color: $lightest_gray;
      }

      .bitCounter {
        text-align: right;
        color: $light_gray;
        &.oversized {
          color: $red;
        }
      }

      // All columns but "message"
      th.encodingLabel, td.encodingLabel,
      th.toAddress, td.toAddress,
      th.fromAddress, td.fromAddress,
      th.packetInfo, td.packetInfo {
        text-align: center;

        input {
          width: 3em;
          text-align: center;
        }
      }

      th.encodingLabel, td.encodingLabel {
        width: 1%; // depend on nowrap
      }

      th.toAddress, td.toAddress,
      th.fromAddress, td.fromAddress {
        width: $narrow-column-width;
      }

      th.packetInfo, td.packetInfo {
        width: $wide-column-width;
      }

      td.toAddress {
        background-color: $to-address-color;
      }

      td.fromAddress {
        background-color: $from-address-color;
      }

      td.packetInfo {
        background-color: $packet-info-color;
      }

      td.message {
        background-color: $message-color;

        // Wrapper div keeps textarea bound within column, but still
        // able to set padding.
        div {
          margin-right: 0.4em;
          textarea {
            resize: none;
            height: 1.5em;
            width: 100%;
          }
        }

      }
    }

    .packetSize {
      width: 50%;
      max-width: 400px;
    }
  }

  // Packet size slider and labels, which appear in the
  // send widget footer.
  .netsimPacketSizeControl {
    label {
      display: inline-block;
    }

    .sliderInlineWrap {
      display: inline-block;
      margin-top: 3.5px;
      width: 300px;

      .sliderLabels {
        margin-bottom: 1px;

        .maxValue {
          float: right;
          text-align: right;
          width: 5em;
        }

        .minValue {
          float: left;
          text-align: left;
          width: 5em;
        }

        .currentValue {
          text-align: center;
        }
      }

      .packetSizeSlider {
        clear: both;
      }
    }
  }

  .netsimSlider {
    text-align: center;

    label {
      display: inline-block;
    }

    .sliderInlineWrap {
      display: inline-block;
      margin-top: 3.5px;
      width: 95%;
      margin-right: 0.5em;

      .sliderLabels {
        margin-bottom: 1px;

        .maxValue {
          float: right;
          text-align: right;
          width: 3em;
        }

        .minValue {
          float: left;
          text-align: left;
          width: 3em;
        }

        &.wideLabels {
          .maxValue, .minValue {
            width: 4em;
          }
        }

        .currentValue {
          text-align: center;
        }
      }

      .slider {
        clear: both;
      }
    }
  }

  .netsimTabs {
    margin-bottom: 10px;

    h1 {
      font-size: 10pt;
      line-height: 10pt;
      margin: 10px 0 3px 0;
      border-bottom: solid darkgrey thin;
    }

    // Modify actual tabs at top of tab area
    .uiTabsNav {
      background: $cyan;
      border-left: none;
      border-right: none;
      border-top: none;
      li {
        // Custom colors
        &.uiStateDefault {
          background-color: $light_cyan;
          a { color: $white; }
        }
        &.uiStateActive {
          background-color: white;
          a { color: $dark_charcoal; }
        }

        // Make tabs just a _little_ bit more compact
        border: none;
        margin-right: 2px;
        a {
          font-family: $gotham-bold;
          font-size: 8pt;
          padding: 0 1em;
        }
      }
    }

    // Less padding around tab content divs
    .uiTabsPanel {
      padding: 0.8em 0.5em;

      // But extra margin around paragraphs of text (instructions)
      p {
        margin: 0 1em 10px 1em;
      }
    }
  }

  .netsimMetronome {
    text-align: center;

    .pulseDot {
      fill: $purple;
    }

    .progressMeter {
      fill: $purple;
    }
  }

  .netsimEncodingSelector {
    div.hiddenControl {
      display: none;
    }

    input[type="checkbox"] {
      vertical-align: baseline;
      margin: 0;
    }

    label {
      display: inline;
      margin-left: 0.25em;
    }
  }

  .netsimRouterLog {
    max-height: 200px;
    overflow-y: scroll;

    table {
      th, td {
        font-size: 8pt;
      }
    }
  }

  .dnsModeControl {
    input[type="radio"] {
      vertical-align: middle;
      margin: 0;
    }

    label {
      display: inline;
      margin-left: 1em;
    }
  }

  .netsimDnsTable {
    tr.localNode {
      font-weight: bold;
      background-color: $own-node-background-color;
    }

    tr.dnsNode {
      color: $white;
      background-color: $orange;
    }
  }

  .dnsNotes {
    div {
      textarea {
        resize: none;
        width: 100%;
        height: 100px;
      }
      padding-right: 14px;
    }
  }

  // Really garish terrible style for debug buttons that we should not ship.
  input.debugButton {
    background: #f9f968;
    background: -moz-linear-gradient(top,  #f9f968 0%, #ffa73d 82%, #ff7f04 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f9f968), color-stop(82%,#ffa73d), color-stop(100%,#ff7f04));
    background: -webkit-linear-gradient(top,  #f9f968 0%,#ffa73d 82%,#ff7f04 100%);
    background: -o-linear-gradient(top,  #f9f968 0%,#ffa73d 82%,#ff7f04 100%);
    background: -ms-linear-gradient(top,  #f9f968 0%,#ffa73d 82%,#ff7f04 100%);
    background: linear-gradient(to bottom,  #f9f968 0%,#ffa73d 82%,#ff7f04 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9f968', endColorstr='#ff7f04',GradientType=0 );
    border: outset #ff7f04 3px;
    color: black;
    font-weight:bold;
  }

  .lobbyHint {
    display: block;
    padding: 20px 40px 40px 40px;

    .faInfoCircle {
      float: left;
      margin: 0 20px;
      font-size: 40px;
    }

    p {
      margin-left: 80px;
    }

    ul {
      margin-left: 100px;
    }
  }
  .netsimShardSelectionPanel .lobbyHint {
    clear: both;
  }
  .netsimLobbyPanel .lobbyHint {
    clear: right;
  }
}

