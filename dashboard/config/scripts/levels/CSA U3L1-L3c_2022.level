<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A planetary scientist wants to create lists of the planets in the solar system and their distances from the sun.\r\n\r\n##In PlanetsManager.java:\r\n\r\n1. Write the `createPlanetNames()`(#e7e8ea) to declare, initialize, and return a `String`(#e7e8ea) array using an initializer list. The array should contain the following values:\r\n\r\n```\r\n\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\", \"Pluto\"\r\n```\r\n\r\n2. Write the `createDistances()`(#e7e8ea) methods to declare, initialize, and return a `double`(#e7e8ea) array using an initializer list. The array should contain the following values:\r\n\r\n```\r\n57.9, 108.2, 149.6, 227.9, 778.6, 1433.5, 2872.5, 4495.1, 5906.4\r\n```\r\n\r\n3. Write the `getNumPlanets()`(#e7e8ea) method to return the length of the `planetNames`(#e7e8ea) array.\r\n\r\n4. Write the `getNumDistances()`(#e7e8ea) method to return the length of the `distances`(#e7e8ea) array.\r\n\r\n##In MyConsole.java:\r\n\r\n5. Call the `getNumPlanets()`(#e7e8ea) and `getNumDistances()`(#e7e8ea) methods and print the results.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://devstronomy.com/#/datasets)!*\r\n\r\n::: details [**Show Me How**]\r\nA 1D array is declared and initialized with an initializer list using the following syntax:\r\n  \r\n  ```\r\n  dataType[] variableName = {value1, value2, . . . };\r\n  ```\r\n\r\nBe sure to replace `dataType`(#e7e8ea) with the type of data the array will store. The `variableName`(#e7e8ea) should be the name of the array. Inside the curly braces ( `{ }`(#e7e8ea) ), list the values the array will store.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Planets",
    "bubble_choice_description": "Create 1D arrays to store the names of the planets in the solar system and their distances from the sun.",
    "thumbnail_url": "https://images.code.org/b06a3550dd772cb1fac0f50cccf54db4-image-1648485055182.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    PlanetsManager scientist = new PlanetsManager();\n\n    // TO DO #5: Call the getNumPlanets() and getNumDistances() methods and print the results.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "PlanetsManager.java": {
        "text": "/*\n * Manages data about the planets in the solar system\n */\npublic class PlanetsManager {\n\n  private String[] planetNames;\n  private double[] distances;\n\n  /*\n   * Creates a PlanetsManager by initializing the planets and distances arrays\n   */\n  public PlanetsManager() {\n    this.planetNames = createPlanetNames();\n    this.distances = createDistances();\n  }\n\n  /*\n   * Creates and returns an array containing the names of planets\n   */\n  public String[] createPlanetNames() {\n    // TO DO #1: Declare, initialize, and return a String array containing the values.\n\n    \n  }\n\n  /*\n   * Creates and returns an array containing the distances\n   */\n  public double[] createDistances() {\n    // TO DO #2: Declare, initialize, and return a double array containing the values.\n\n    \n  }\n\n  /*\n   * Returns the number of planets in the planetNames array\n   */\n  public int getNumPlanets() {\n    // TO DO #3: Return the length of the planetNames array.\n\n    \n  }\n\n  /*\n   * Returns the number of values in the distances array\n   */\n  public int getNumDistances() {\n    // TO DO #4: Return the length of the distances array.\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nZ1yOffAVq2lD75Jyh50=\n",
    "encrypted_validation": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-03-24T23:57:54.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-24 23:57:57 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-28 16:31:39 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-28 16:32:44 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-28 16:33:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-28 16:35:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:21:46 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:05:48 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:28:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:29:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:29:22 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:29:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:30:57 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:37:49 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:38:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:38:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:38:16 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-12 12:39:28 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-12 12:39:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-12 12:39:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-12 12:41:08 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:02:58 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:10:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:11:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:11:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:11:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:57:46 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:58:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 14:58:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:01:25 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:03:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:04:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:04:14 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:04:24 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:09:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:09:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:11:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-15 15:11:58 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
