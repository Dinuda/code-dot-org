<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L4-L3b PBT_pilot-2022",
    "long_instructions": "The `Books`(#e7e8ea) class has instance variables for a 1D array of book titles and a 1D array containing their years of publication.\r\n\r\n##In Books.java:\r\n\r\nThe method `hasYear()`(#e7e8ea) should return `true`(#e7e8ea) if at least one value in the `years`(#e7e8ea) array is equal to its parameter `yearToFind`(#e7e8ea). In the method `hasYear()`(#e7e8ea),\r\n\r\n1. Traverse the `years`(#e7e8ea) array and check if the current value is equal to `yearToFind`(#e7e8ea).\r\n\r\n   * Return `true`(#e7e8ea) if the current value is equal to `yearToFind`(#e7e8ea).\r\n\r\n2. If no values in `year`(#e7e8ea) is equal to `yearToFind`(#e7e8ea), return `false`(#e7e8ea).\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.kaggle.com/datasets/jealousleopard/goodreadsbooks)!*",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Books",
    "bubble_choice_description": "Determine if a 1D array of book publication years contains at least one value that is equal to a specific value.",
    "thumbnail_url": "https://images.code.org/5e08536bd2a6be219e509018949be592-image-1648584897633.png",
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nspI0xa8xr5mgq+KUsK8cMtghs7CNe7K+\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] booksList = {\"Twilight\", \"The Hobbit\", \"The Catcher in the Rye\", \"The Fellowship of the Ring\", \"Animal Farm\",\n                         \"Lord of the Flies\", \"Of Mice and Men\", \"The Alchemist\", \"The Giver\", \"The Book Thief\"};\n    \n    int[] yearsList = {2006, 2002, 2001, 2003, 2003, 1999, 2002, 1993, 2006, 2006};\n\n    Books myBooks = new Books(booksList, yearsList);\n\n    System.out.println(\"My books has a book published in 2003: \" + myBooks.hasYear(2003));\n    \n  }\n}",
        "isVisible": true
      },
      "Books.java": {
        "text": "/*\n * Stores and analyzes the list of book\n * titles and their year of publication\n */\npublic class Books {\n\n  private String[] titles;   // The list of book titles\n  private int[] years;       // The list of years the books were published\n\n  /*\n   * Constructor to create a Books object with\n   * specified titles and years arrays\n   */\n  public Books(String[] titles, int[] years) {\n    this.titles = titles;\n    this.years = years;\n  }\n\n  /*\n   * Returns the array titles\n   */\n  public String[] getTitles() {\n    return titles;\n  }\n\n  /*\n   * Returns the array years\n   */\n  public int[] getYears() {\n    return years;\n  }\n\n  /*\n   * Checks if years array contains at least one value\n   * that is equal to yearToFind\n   */\n  public boolean hasYear(int yearToFind) {\n    // TO DO #1: Check if years array contains at least\n    // one value that is equal to yearToFind.\n\n\n    return false;\n  }\n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:14.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:14.506+00:00\",\"changed\":[\"cloned from \\\"CSA U3L4-L3b_2022\\\"\"],\"cloned_from\":\"CSA U3L4-L3b_2022\"},{\"changed_at\":\"2022-09-01 14:36:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:39:30 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:43:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:44:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
