<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:05.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "This program contains a `mountain`(#e7e8ea) array of the top five highest mountains in the world, and the `height`(#e7e8ea) array contains the height of each mountain in feet (in order).\r\n\r\n##In WorldMountains.java:\r\n\r\n1. Write the method `printMountainHeights()`(#e7e8ea).\r\n\r\n   * Traverse the `mountains`(#e7e8ea) and `heights`(#e7e8ea) arrays using a `while`(#e7e8ea) loop to create and return `mountainString`(#e7e8ea).\r\n   \r\n   * The `mountainString`(#e7e8ea) should contain each mountain name and height on a new line.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `printMountainHeights()`(#e7e8ea) method and print the result.\r\n\r\n![](https://images.code.org/692b0c9eef9d2dcda2e458bba1a2f83a-image-1648496712531.png)\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.summitpost.org/)!*\r\n\r\n::: details [**Show Me How**]\r\nLoop through a 1D array using the following syntax:\r\n  \r\n  ```\r\n  // a variable to keep track of the current position in the array\r\n  int variableName = startingIndex;\r\n  \r\n  while (variableName < arrayName.length) {\r\n    // code to execute\r\n    // change of variableName\r\n  }\r\n  ```\r\n\r\nBe sure to change `variableName`(#e7e8ea) to a name you can easily identify, such as `index`(#e7e8ea), and set the `startingIndex`(#e7e8ea) to the index position you want to start at in the array.\r\n\r\nInside the `while`(#e7e8ea) loop, change the `variableName`(#e7e8ea) by the amount you want to move in the array, such as `variableName += 1`(#e7e8ea) to move one index at a time.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] mountains = {\"Mount Everest\", \"K2\", \"Kangchenjunga\", \"Lhotse\", \"Makalu\"};\n    int[] heights = {29029, 28251, 28169, 27940, 27838};\n\n    WorldMountains myMountains = new WorldMountains(mountains, heights);\n\n    // TO DO #2: Call the printMountainHeights() method and print the result.\n\n    \n\n  }\n}",
        "isVisible": true
      },
      "WorldMountains.java": {
        "text": "/*\n * Manages data about mountains\n */\npublic class WorldMountains {\n\n  private String[] names;\n  private int[] heights;\n\n  /*\n   * Creates a WorldMountains with a\n   * names array and a heights array\n   */\n  public WorldMountains(String[] names, int[] heights) {\n    this.names = names;\n    this.heights = heights;\n  }\n\n  /*\n   * Returns the array containing the mountain names\n   */\n  public String[] getNames() {\n    return names;\n  }\n\n  /*\n   * Returns the array containing the mountain heights\n   */\n  public int[] getHeights() {\n    return heights;\n  }\n\n  /*\n   * Returns a String containing the mountain names and their heights\n   */\n  public String printMountainHeights() {\n    String mountainString = \"\";\n    \n    // TO DO #1: Traverse the names and heights array to create\n    // a String containing each mountain name and height on a new line.\n\n    \n\n    return mountainString;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nhmgOVqxIW4Mrmvcy\n",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:05.283+00:00\",\"changed\":[\"cloned from \\\"CSA U3L2-L5_2022\\\"\"],\"cloned_from\":\"CSA U3L2-L5_2022\"}]"
}]]></config>
</Javalab>
